logger:
  level: debug  # logger level: one of "debug", "info" (default), "warn", "error", "dpanic", "panic", "fatal"
  encoding: json # logger encoding: one of "console" (default) or "json"
  timestamp: true # turn on/off timestamps (default: false, timestamps are disabled,
    # but if the parameter is not set, they will be enabled when you run with tty)
  sampling: # sampling settings
    enabled: true # on/off (default: off)

pprof:
  enabled: true
  address: localhost:6060  # endpoint for Node profiling
  shutdown_timeout: 15s  # timeout for profiling HTTP server graceful shutdown

prometheus:
  enabled: true
  address: localhost:9090  # endpoint for Node metrics
  shutdown_timeout: 15s  # timeout for metrics HTTP server graceful shutdown

node:
  wallet:
    path: "./wallet.json"  # path to a NEO wallet; ignored if key is presented
    address: "NcpJzXcSDrh5CCizf4K9Ro6w4t59J5LKzz"  # address of a NEO account in the wallet; ignored if key is presented
    password: "password"  # password for a NEO account in the wallet; ignored if key is presented
  addresses:  # list of addresses announced by Storage node in the Network map
    - s01.neofs.devenv:8080
    - /dns4/s02.neofs.devenv/tcp/8081
    - grpc://127.0.0.1:8082
    - grpcs://localhost:8083
  # List of colon-separated key-value attributes.
  attributes:
    - "Price:11"
    - UN-LOCODE:RU MSK
  # Next attribute specifies optional NeoFS NNS domain in order to enter the storage node into a private node group
  # (kind of subnet). The node must have public key from the corresponding access list. See docs for more detailed information.
    - VerifiedNodesDomain:nodes.some-org.neofs
  relay: true  # start Storage node in relay mode without bootstrapping into the Network map
  persistent_sessions:
    path: /sessions  # path to persistent session tokens file of Storage node (default: in-memory sessions)
  persistent_state:
    path: /state  # path to persistent state file of Storage node

grpc:
  - endpoint: s01.neofs.devenv:8080  # endpoint for gRPC server
    conn_limit: 1  # connection limits; exceeding connection will not be declined, just blocked before active number decreases or client timeouts
    tls:
      enabled: true  # use TLS for a gRPC connection (min version is TLS 1.2)
      certificate: /path/to/cert  # path to TLS certificate
      key: /path/to/key  # path to TLS key

  - endpoint: s02.neofs.devenv:8080  # endpoint for gRPC server
    conn_limit: -1  # connection limits; exceeding connection will not be declined, just blocked before active number decreases or client timeouts
    tls:
      enabled: false  # use TLS for a gRPC connection
  - endpoint: s03.neofs.devenv:8080

control:
  authorized_keys:  # list of hex-encoded public keys that have rights to use the Control Service
    - 035839e45d472a3b7769a2a1bd7d54c4ccd4943c3b40f547870e83a8fcbfb3ce11
    - 028f42cfcb74499d7b15b35d9bff260a1c8d27de4f446a627406a382d8961486d6
  grpc:
    endpoint: localhost:8090  # endpoint that is listened by the Control Service

fschain:
  dial_timeout: 30s  # timeout for FS chain NEO RPC client connection (default: 1m)
  cache_ttl: 15s  # FS chain cache TTL value (min interval between similar calls). Negative value disables caching.
                  # Default value: block time. It is recommended to have this value less or equal to block time.
                  # Cached entities: containers, container lists, eACL tables.
  reconnections_number: 6  # number of reconnection attempts
  reconnections_delay: 6s  # time delay b/w reconnection attempts
  endpoints:  # FS chain NEO RPC endpoints; are shuffled and used one by one until the first success
    - wss://rpc1.morph.fs.neo.org:40341/ws
    - wss://rpc2.morph.fs.neo.org:40341/ws

apiclient:
  stream_timeout: 20s # timeout for individual operations in a streaming RPC (default: 1m)
  min_connection_time: 30s  # min time allotted for remote SN connection (default: 20s)
  ping_interval: 20s  # inactivity period after which remote SN is pinged (default: 10s)
  ping_timeout: 10s  # timeout for remote SN pings (default: 5s)

policer:
  head_timeout: 15s  # timeout for the Policer HEAD remote operation
  replication_cooldown: 101ms # cooldown time b/w replication tasks submitting
  object_batch_size: 11 # replication's objects batch size
  max_workers: 21 # replication's worker pool's maximum size

replicator:
  put_timeout: 15s  # timeout for the Replicator PUT remote operation (defaults to 1m)
  pool_size: 10     # maximum amount of concurrent replications

object:
  delete:
    tombstone_lifetime: 10 # tombstone "local" lifetime in epochs
  put:
    pool_size_remote: 100  # number of async workers for remote PUT operations
  search:
    pool_size: 50  # number of async workers for search operations (default: 100)

metadata:
  path: path/to/meta  # path to meta data storages, required

storage:
  # note: shard configuration can be omitted for relay node (see `node.relay`)
  shard_pool_size: 15 # size of per-shard worker pools used for PUT operations
  put_retry_timeout: 5s # object PUT retry timeout
  shard_ro_error_threshold: 100 # amount of errors to occur before shard is made read-only (default: 0, ignore errors)
  ignore_uninited_shards: true # do we need to ignore uninited shards (default: false, fail on any shard failure)

  shard_defaults: # section with the default shard parameters
    resync_metabase: true  # sync metabase with blobstor on start, expensive, leave false until complete understanding

    writecache:
      enabled: true

    metabase:
      perm: 0644  # permissions for metabase files(directories: +x for current user and group)
      max_batch_size: 200
      max_batch_delay: 20ms

    compress: false  # turn on/off zstd(level 3) compression of stored objects

    blobstor:
      perm: 0644  # permissions for blobstor files(directories: +x for current user and group)
      depth: 5  # max depth of object tree storage in FS

    gc:
      remover_batch_size: 200  # number of objects to be removed by the garbage collector
      remover_sleep_interval: 5m  # frequency of the garbage collector invocation

  shards:
    - mode: read-only  # mode of the shard, must be one of the:
      # read-write (default)
      # read-only
      # degraded
      # degraded-read-only
      # disabled (do not work with the shard, allows to not remove it from the config)
      resync_metabase: false  # sync metabase with blobstor on start, expensive, leave false until complete understanding

      writecache:
        enabled: false
        no_sync: true
        path: tmp/0/cache  # write-cache root directory
        capacity: 3221225472  # approximate write-cache total size, bytes

      metabase:
        path: tmp/0/meta  # metabase path
        max_batch_size: 100
        max_batch_delay: 10ms

      compress: true  # turn on/off zstd(level 3) compression of stored objects
      compression_exclude_content_types:
        - audio/*
        - video/*

      blobstor:
        type: fstree
        path: tmp/0/blob  # blobstor path

      gc:
        remover_batch_size: 150  # number of objects to be removed by the garbage collector
        remover_sleep_interval: 2m  # frequency of the garbage collector invocation

    - writecache:
        path: tmp/1/cache  # write-cache root directory
        capacity: 4 G  # approximate write-cache total size, bytes

      metabase:
        path: tmp/1/meta  # metabase path

      blobstor:
        type: fstree
        path: tmp/1/blob  # blobstor path
        no_sync: true
        flush_interval: 20ms # time interval between combined file writes to disk (defaults to 10ms)
        combined_count_limit: 64 # number of small objects to write into a single file (defaults to 128)
        combined_size_limit: 16M # limit for the multi-object file size (defaults to 8M)
        combined_size_threshold: 512K # threshold for combined object writing (defaults to 128K)
