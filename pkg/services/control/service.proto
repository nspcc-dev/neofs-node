syntax = "proto3";

package control;

import "pkg/services/control/types.proto";

option go_package = "github.com/nspcc-dev/neofs-node/pkg/services/control";

// `ControlService` provides an interface for internal work with the storage node.
service ControlService {
    // Performs health check of the storage node.
    rpc HealthCheck (HealthCheckRequest) returns (HealthCheckResponse);

    // Returns network map snapshot of the current NeoFS epoch.
    rpc NetmapSnapshot (NetmapSnapshotRequest) returns (NetmapSnapshotResponse);
}

// Health check request.
message HealthCheckRequest {
    // Health check request body.
    message Body {
    }

    // Body of health check request message.
    Body body = 1;

    // Body signature.
    Signature signature = 2;
}

// Health check request.
message HealthCheckResponse {
    // Health check response body
    message Body {
        // Health status of storage node.
        HealthStatus status = 1;
    }

    // Body of health check response message.
    Body body = 1;

    // Body signature.
    Signature signature = 2;
}

// Get netmap snapshot request.
message NetmapSnapshotRequest {
    // Get netmap snapshot request body.
    message Body {
    }

    // Body of get netmap snapshot request message.
    Body body = 1;

    // Body signature.
    Signature signature = 2;
}

// Get netmap snapshot request.
message NetmapSnapshotResponse {
    // Get netmap snapshot response body
    message Body {
        // Structure of the requested network map.
        Netmap netmap = 1 [json_name = "netmap"];
    }

    // Body of get netmap snapshot response message.
    Body body = 1;

    // Body signature.
    Signature signature = 2;
}
